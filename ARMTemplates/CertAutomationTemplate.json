{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectAppName": {
            "type": "string",
            "metadata": {
                "description": "Base name for alerts objects (name of the webapp for example)"
            }
        },

        "projectAppShortName": {
            "type": "string",
            "metadata": {
                "description": "Short base name for notification group (6 symbols)"
            }
        },

        "gitAccessToken": {
            "type": "string",
            "metadata": {
                "description": "Token for access to git repository with runbooks"
            }
        },

        "logWebAppName": {
            "type": "string",
            "defaultValue": "[parameters('projectAppName')]",
            "metadata": {
                "description": "Name of the webapp in the log messages (default == projectAppName)"
            }
        },

        "gitBranch": {
            "type": "string",
            "metadata": {
                "description": "Branch in the git repository"
            }
        },

        "automationLogAnalyticsName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectAppName'),'-automation-logs')]",
            "metadata": {
                "description": "Name of Log Analytics Workspace"
            }
        },

        "automationAccountName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectAppName'),'-automation')]",
            "metadata": {
                "description": "Name of Automation Account"
            }
        },

        "storageAccountName": {
            "type": "string",
            "defaultValue": "[toLower(concat(parameters('projectAppName'),'autostor'))]",
            "metadata": {
                "description": "Name of the storage account"
            }
        },

        "tagAuthor": {
            "type": "string",
            "defaultValue": "Andrey Krivtsov",
            "metadata": {
                "description": "value for tag Author"
            }
        },

        "tagProject": {
            "type": "string",
            "defaultValue": "[parameters('projectAppName')]",
            "metadata": {
                "description": "value for tag Project"
            }
        },

        "currentTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]"
        }
    },
    "functions": [],
    "variables": {
        "scheduleStartTime": "[dateTimeAdd(parameters('currentTime'), 'PT1H')]",
        "AzureRMWebsitesModule": "AzureRM.Websites",
        "PoshACMEModule": "Posh-ACME",

        "logAnalyticsResource": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('automationLogAnalyticsName'))]",
        "automationResource" : "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",

        "actionGroupName": "[concat(parameters('projectAppName'),'-Notify-Group')]",
        "actionGroupShortName": "[concat(parameters('projectAppShortName'),'Notify')]",        
        "actionGroupResource": "[resourceId('microsoft.insights/actionGroups', variables('actionGroupName'))]"
    },
    "resources": [
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[parameters('automationLogAnalyticsName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Author": "[parameters('tagAuthor')]",
                "Project": "[parameters('tagProject')]"
            },
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-10-31",
            "name": "[parameters('automationAccountName')]",
            "location": "[resourceGroup().location]",
            
            "tags": {
                "Author": "[parameters('tagAuthor')]",
                "Project": "[parameters('tagProject')]"
            },
            
            "properties": {
                "sku": {
                    "name": "Basic"
                }
            },

            "resources": [
                {
                    "type": "schedules",
                    "apiVersion": "2015-10-31",
                    "name": "EveryDay-23-00",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "startTime": "[variables('scheduleStartTime')]",
                        "expiryTime": "9999-12-31T23:59:59+03:00",
                        "interval": 1,
                        "frequency": "Day",
                        "timeZone": "Europe/Moscow"
                    }
                },

                {
                    "type": "schedules",
                    "apiVersion": "2015-10-31",
                    "name": "EverySunday",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "startTime": "[variables('scheduleStartTime')]",
                        "expiryTime": "9999-12-31T23:59:59+03:00",
                        "interval": 1,
                        "frequency": "Week",
                        "timeZone": "Europe/Moscow"
                    }
                },

                {
                    "type": "modules",
                    "apiVersion": "2015-10-31",
                    "name": "[variables('PoshACMEModule')]",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "contentLink": {
                            "uri": "[concat('https://www.powershellgallery.com/api/v2/package/', variables('PoshACMEModule'))]"
                        }
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2018-06-30",
                    "name": "AzureAutomation-Account-Modules-Update",
                    "location": "[resourceGroup().location]",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "runbookType": "PowerShell",
                        "logVerbose": true,
                        "logProgress": false,
                        "publishContentLink": {
                            "uri":"https://github.com/microsoft/AzureAutomation-Account-Modules-Update/raw/master/Update-AutomationAzureModulesForAccount.ps1"
                        }
                    }
                },
                {
                    "type": "sourceControls",
                    "apiVersion": "2017-05-15-preview",
                    "name": "GitHub",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "repoUrl": "https://github.com/andy-krivtsov/le-webapp.git",
                        "sourceType": "GitHub",
                        "branch": "[parameters('gitBranch')]",
                        "folderPath": "/AppRunbooks",
                        "autoSync": true,
                        "publishRunbook": true,
                        "securityToken" : {
                            "tokenType": "PersonalAccessToken",
                            "accessToken": "[parameters('gitAccessToken')]"
                        }
                    }
                },
                {
                    "type": "variables",
                    "name": "LECertUpdateConfiguration",
                    "apiVersion": "2015-10-31",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "value": "",
                        "description": "Let's encrypt update script configuration",
                        "isEncrypted": false
                    }
                },
                {
                    "type": "variables",
                    "name": "LECertUpdatePfxPassword",
                    "apiVersion": "2015-10-31",
                    "dependsOn" : [ "[parameters('automationAccountName')]" ],
                    "properties": {
                        "value": "",
                        "description": "Lets Encrypt cert update script PFX file password",
                        "isEncrypted": true
                    }
                }
            ]            
        },
        {
            "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(parameters('automationAccountName'),'/microsoft.insights/automationLogsSettings')]",
            "dependsOn": [
                "[variables('automationResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "workspaceId": "[variables('logAnalyticsResource')]",
                "logs": [
                    {
                        "category": "JobLogs",
                        "enabled": true
                    },
                    {
                        "category": "JobStreams",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Author": "[parameters('tagAuthor')]",
                "Project": "[parameters('tagProject')]"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "/default/le-public",
                    "dependsOn" : [ "[parameters('storageAccountName')]" ],
                    "properties": {
                        "publicAccess": "Blob"
                    }
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "default/le-state",
                    "dependsOn" : [ "[parameters('storageAccountName')]" ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },

        {
            "type": "Microsoft.Insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[variables('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[variables('actionGroupShortName')]",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },

        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",  
            "name": "[concat(parameters('projectAppName'),'-certificate-require-update')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('actionGroupResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "description": "Certificate for WebApp expired in less than 20 days (daily checks)",
                "enabled": "true",
                "source": {
                    "query": "[concat( 'AzureDiagnostics | where ResultDescription contains \"Test-WebAppCertificate: SSL certificate needs to be updated. WebApp: ', parameters('logWebAppName'), '\"')]",
                    "authorizedResources": [],
                    "dataSourceId": "[variables('logAnalyticsResource')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 180,
                    "timeWindowInMinutes": 180
                },
                "action": {
                    "severity": "1",
                    "aznsAction": {
                        "actionGroup": [
                            "[variables('actionGroupResource')]"
                        ]
                    },
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },

        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",
            "name": "[concat(parameters('projectAppName'),'-certificate-ok')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('actionGroupResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "description": "Certificate for WebApp is OK (daily checks)",
                "enabled": "true",
                "source": {
                    "query": "[concat( 'AzureDiagnostics | where ResultDescription contains \"Test-WebAppCertificate: SSL certificate is OK! WebApp: ', parameters('logWebAppName'), '\"')]",
                    "authorizedResources": [],
                    "dataSourceId": "[variables('logAnalyticsResource')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 15,
                    "timeWindowInMinutes": 15
                },
                "action": {
                    "severity": "2",
                    "aznsAction": {
                        "actionGroup": [
                            "[variables('actionGroupResource')]"
                        ]
                    },
                    "throttlingInMin": 60,
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",
            "name": "[concat(parameters('projectAppName'),'-certificate-updated')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('actionGroupResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "description": "Certificate has been updated for WebApp",
                "enabled": "true",
                "source": { 
                    "query": "[concat( 'AzureDiagnostics | where ResultDescription contains \"Set-AppServiceCertificate: new certificate has been installed for WebApp: ', parameters('logWebAppName'), '\"')]",
                    "authorizedResources": [],
                    "dataSourceId": "[variables('logAnalyticsResource')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 180,
                    "timeWindowInMinutes": 180
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[variables('actionGroupResource')]"
                        ]
                    },
                    "throttlingInMin": 50,
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",
            "name": "[concat(parameters('projectAppName'),'-certificate-does-not-require-update')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('actionGroupResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "description": "Certificate for WebApp doesn't requre updating!",
                "enabled": "true",
                "source": {
                    "query": "[concat( 'AzureDiagnostics | where ResultDescription contains \"Update-ACMECertificate: certificate update is not needed for WebApp: ', parameters('logWebAppName'), '\"')]",
                    "authorizedResources": [],
                    "dataSourceId": "[variables('logAnalyticsResource')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 15,
                    "timeWindowInMinutes": 15
                },
                "action": {
                    "severity": "3",
                    "aznsAction": {
                        "actionGroup": [
                            "[variables('actionGroupResource')]"
                        ]
                    },
                    "throttlingInMin": 50,
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2018-04-16",
            "name": "[concat(parameters('projectAppName'),'-errors-in-the-certificate-updating')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('actionGroupResource')]",
                "[variables('logAnalyticsResource')]"
            ],
            "properties": {
                "description": "There are errors found during the certificate update for WebApp",
                "enabled": "true",
                "source": {
                    "query": "AzureDiagnostics | where StreamType_s == \"Error\"",
                    "authorizedResources": [],
                    "dataSourceId": "[variables('logAnalyticsResource')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": 60,
                    "timeWindowInMinutes": 60
                },
                "action": {
                    "severity": "1",
                    "aznsAction": {
                        "actionGroup": [
                            "[variables('actionGroupResource')]"
                        ]
                    },
                    "throttlingInMin": 50,
                    "trigger": {
                        "thresholdOperator": "GreaterThan",
                        "threshold": 0
                    },
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
                }
            }
        }

    ],
    "outputs": {}
}